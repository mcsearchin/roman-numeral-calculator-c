#include <stdlib.h>
#include "roman-numeral-calculator.h"

#test add_1_and_1
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("I", "I", sum));
	ck_assert_str_eq(sum, "II");

#test add_1_and_2
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("I", "II", sum));
	ck_assert_str_eq(sum, "III");

#test add_2_and_2
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("II", "II", sum));
	ck_assert_str_eq(sum, "IV");

#test add_2_and_3
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("II", "III", sum));
	ck_assert_str_eq(sum, "V");

#test add_3_and_3
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("III", "III", sum));
	ck_assert_str_eq(sum, "VI");

#test add_4_and_3
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("IV", "III", sum));
	ck_assert_str_eq(sum, "VII");

#test add_3_and_4
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("III", "IV", sum));
	ck_assert_str_eq(sum, "VII");

#test add_5_and_4
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("IV", "V", sum));
	ck_assert_str_eq(sum, "IX");

#test add_5_and_5
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("V", "V", sum));
	ck_assert_str_eq(sum, "X");

#test add_5_and_6
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("V", "VI", sum));
	ck_assert_str_eq(sum, "XI");

#test add_10_and_1
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("X", "I", sum));
	ck_assert_str_eq(sum, "XI");

#test add_11_and_2
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("IX", "II", sum));
	ck_assert_str_eq(sum, "XI");

#test add_8_and_4
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("VIII", "IV", sum));
	ck_assert_str_eq(sum, "XII");

#test add_5_and_9
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("V", "IX", sum));
	ck_assert_str_eq(sum, "XIV");

#test add_10_and_5
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("X", "V", sum));
	ck_assert_str_eq(sum, "XV");

#test add_9_and_9
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("IX", "IX", sum));
	ck_assert_str_eq(sum, "XVIII");

#test add_10_and_9
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("X", "IX", sum));
	ck_assert_str_eq(sum, "XIX");

#test add_10_and_10
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("X", "X", sum));
	ck_assert_str_eq(sum, "XX");

#test add_16_and_19
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("XVI", "XIX", sum));
	ck_assert_str_eq(sum, "XXXV");

#test add_20_and_20
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("XX", "XX", sum));
	ck_assert_str_eq(sum, "XL");

#test add_20_and_29
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("XX", "XXIX", sum));
	ck_assert_str_eq(sum, "XLIX");

#test add_40_and_10
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("XL", "X", sum));
	ck_assert_str_eq(sum, "L");

#test add_39_and_12
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("XXXIX", "XII", sum));
	ck_assert_str_eq(sum, "LI");

#test add_50_and_11
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("L", "XI", sum));
	ck_assert_str_eq(sum, "LXI");

#test add_50_and_38
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("L", "XXXVIII", sum));
	ck_assert_str_eq(sum, "LXXXVIII");

#test add_50_and_40
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("L", "XXXX", sum));
	ck_assert_str_eq(sum, "XC");

#test add_50_and_50
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("L", "L", sum));
	ck_assert_str_eq(sum, "C");

#test add_12_and_89
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("XII", "LXXXIX", sum));
	ck_assert_str_eq(sum, "CI");

#test add_100_and_13
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("C", "XIII", sum));
	ck_assert_str_eq(sum, "CXIII");

#test add_30_and_90
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("XXX", "XC", sum));
	ck_assert_str_eq(sum, "CXX");

#test add_99_and_99
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("XCIX", "XCIX", sum));
	ck_assert_str_eq(sum, "CXCVIII");

#test add_201_and_198
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("CCI", "CXCVIII", sum));
	ck_assert_str_eq(sum, "CCCXCIX");

#test add_200_and_200
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("CC", "CC", sum));
	ck_assert_str_eq(sum, "CD");

#test add_300_and_200
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("CCC", "CC", sum));
	ck_assert_str_eq(sum, "D");

#test add_500_and_1
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("D", "I", sum));
	ck_assert_str_eq(sum, "DI");

#test add_400_and_100
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("CD", "C", sum));
	ck_assert_str_eq(sum, "D");

#test add_400_and_500
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("CD", "D", sum));
	ck_assert_str_eq(sum, "CM");

#test add_499_and_499
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("CDXCIX", "CDXCIX", sum));
	ck_assert_str_eq(sum, "CMXCVIII");

#test add_500_and_500
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("D", "D", sum));
	ck_assert_str_eq(sum, "M");

#test add_1000_and_1
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("M", "I", sum));
	ck_assert_str_eq(sum, "MI");

#test add_999_and_2
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("CMXCIX", "II", sum));
	ck_assert_str_eq(sum, "MI");

#test add_1000_and_1000
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("M", "M", sum));
	ck_assert_str_eq(sum, "MM");

#test add_1500_and_2499
	char* sum = malloc(16);
	ck_assert_int_eq(SUCCESS, add("MD", "MMCDXCIX", sum));
	ck_assert_str_eq(sum, "MMMCMXCIX");

#test subtract_1_from_2
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("II", "I", difference));
	ck_assert_str_eq(difference, "I");

#test subtract_1_from_3
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("III", "I", difference));
	ck_assert_str_eq(difference, "II");

#test subtract_1_from_5
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("V", "I", difference));
	ck_assert_str_eq(difference, "IV");

#test subtract_5_from_6
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("VI", "V", difference));
	ck_assert_str_eq(difference, "I");

#test subtract_4_from_5
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("V", "IV", difference));
	ck_assert_str_eq(difference, "I");

#test subtract_6_from_8
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("VIII", "VI", difference));
	ck_assert_str_eq(difference, "II");

#test subtract_1_from_9
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("IX", "I", difference));
	ck_assert_str_eq(difference, "VIII");

#test subtract_5_from_10
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("X", "V", difference));
	ck_assert_str_eq(difference, "V");

#test subtract_1_from_10
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("X", "I", difference));
	ck_assert_str_eq(difference, "IX");

#test subtract_10_from_11
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("XI", "X", difference));
	ck_assert_str_eq(difference, "I");

#test subtract_19_from_20
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("XX", "XIX", difference));
	ck_assert_str_eq(difference, "I");

#test subtract_50_from_51
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("LI", "L", difference));
	ck_assert_str_eq(difference, "I");

#test subtract_1_from_50
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("L", "I", difference));
	ck_assert_str_eq(difference, "XLIX");

#test subtract_5_from_50
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("L", "V", difference));
	ck_assert_str_eq(difference, "XLV");

#test subtract_10_from_50
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("L", "X", difference));
	ck_assert_str_eq(difference, "XL");

#test subtract_40_from_50
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("L", "XL", difference));
	ck_assert_str_eq(difference, "X");

#test subtract_90_from_100
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("C", "XC", difference));
	ck_assert_str_eq(difference, "X");

#test subtract_95_from_100
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("C", "XCV", difference));
	ck_assert_str_eq(difference, "V");

#test subtract_400_from_500
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("D", "CD", difference));
	ck_assert_str_eq(difference, "C");

#test subtract_450_from_500
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("D", "CDL", difference));
	ck_assert_str_eq(difference, "L");

#test subtract_490_from_500
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("D", "CDXC", difference));
	ck_assert_str_eq(difference, "X");

#test subtract_500_from_1000
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("M", "D", difference));
	ck_assert_str_eq(difference, "D");

#test subtract_3005_from_3999
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("MMMCMXCIX", "MMMV", difference));
	ck_assert_str_eq(difference, "CMXCIV");

#test subtract_3900_from_3999
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("MMMCMXCIX", "MMMCM", difference));
	ck_assert_str_eq(difference, "XCIX");

#test subtract_3998_from_3999
	char* difference = malloc(16);
	ck_assert_int_eq(SUCCESS, subtract("MMMCMXCIX", "MMMCMXCVIII", difference));
	ck_assert_str_eq(difference, "I");

